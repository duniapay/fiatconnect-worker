import { z } from 'zod';
export declare enum KycStatus {
    KycNotCreated = "KycNotCreated",
    KycPending = "KycPending",
    KycApproved = "KycApproved",
    KycDenied = "KycDenied",
    KycExpired = "KycExpired"
}
export declare const kycStatusSchema: z.ZodNativeEnum<typeof KycStatus>;
export declare enum KycSchema {
    PersonalDataAndDocuments = "PersonalDataAndDocuments",
    PersonalDataAndDocumentsDetailed = "PersonalDataAndDocumentsDetailed"
}
export declare const kycSchemaSchema: z.ZodNativeEnum<typeof KycSchema>;
export declare enum IdentificationDocumentType {
    IDC = "IDC",
    PAS = "PAS",
    DL = "DL"
}
export declare const identificationDocumentTypeSchema: z.ZodUnion<[z.ZodEnum<[IdentificationDocumentType, ...IdentificationDocumentType[]]>, z.ZodEnum<[IdentificationDocumentType, ...IdentificationDocumentType[]]>]>;
export declare const personalDataAndDocumentsKycSchema: z.ZodObject<{
    firstName: z.ZodString;
    middleName: z.ZodOptional<z.ZodString>;
    lastName: z.ZodString;
    dateOfBirth: z.ZodObject<{
        day: z.ZodString;
        month: z.ZodString;
        year: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        day: string;
        month: string;
        year: string;
    }, {
        day: string;
        month: string;
        year: string;
    }>;
    address: z.ZodObject<{
        address1: z.ZodString;
        address2: z.ZodOptional<z.ZodString>;
        isoCountryCode: z.ZodString;
        isoRegionCode: z.ZodString;
        city: z.ZodString;
        postalCode: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        address1: string;
        isoCountryCode: string;
        isoRegionCode: string;
        city: string;
        address2?: string | undefined;
        postalCode?: string | undefined;
    }, {
        address1: string;
        isoCountryCode: string;
        isoRegionCode: string;
        city: string;
        address2?: string | undefined;
        postalCode?: string | undefined;
    }>;
    phoneNumber: z.ZodString;
    selfieDocument: z.ZodString;
    identificationDocument: z.ZodString;
}, "strip", z.ZodTypeAny, {
    firstName: string;
    lastName: string;
    dateOfBirth: {
        day: string;
        month: string;
        year: string;
    };
    address: {
        address1: string;
        isoCountryCode: string;
        isoRegionCode: string;
        city: string;
        address2?: string | undefined;
        postalCode?: string | undefined;
    };
    phoneNumber: string;
    selfieDocument: string;
    identificationDocument: string;
    middleName?: string | undefined;
}, {
    firstName: string;
    lastName: string;
    dateOfBirth: {
        day: string;
        month: string;
        year: string;
    };
    address: {
        address1: string;
        isoCountryCode: string;
        isoRegionCode: string;
        city: string;
        address2?: string | undefined;
        postalCode?: string | undefined;
    };
    phoneNumber: string;
    selfieDocument: string;
    identificationDocument: string;
    middleName?: string | undefined;
}>;
export type PersonalDataAndDocumentsKyc = z.infer<typeof personalDataAndDocumentsKycSchema>;
export declare const personalDataAndDocumentsDetailedKycSchema: z.ZodIntersection<z.ZodIntersection<z.ZodObject<Omit<{
    firstName: z.ZodString;
    middleName: z.ZodOptional<z.ZodString>;
    lastName: z.ZodString;
    dateOfBirth: z.ZodObject<{
        day: z.ZodString;
        month: z.ZodString;
        year: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        day: string;
        month: string;
        year: string;
    }, {
        day: string;
        month: string;
        year: string;
    }>;
    address: z.ZodObject<{
        address1: z.ZodString;
        address2: z.ZodOptional<z.ZodString>;
        isoCountryCode: z.ZodString;
        isoRegionCode: z.ZodString;
        city: z.ZodString;
        postalCode: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        address1: string;
        isoCountryCode: string;
        isoRegionCode: string;
        city: string;
        address2?: string | undefined;
        postalCode?: string | undefined;
    }, {
        address1: string;
        isoCountryCode: string;
        isoRegionCode: string;
        city: string;
        address2?: string | undefined;
        postalCode?: string | undefined;
    }>;
    phoneNumber: z.ZodString;
    selfieDocument: z.ZodString;
    identificationDocument: z.ZodString;
}, "identificationDocument">, "strip", z.ZodTypeAny, {
    firstName: string;
    lastName: string;
    dateOfBirth: {
        day: string;
        month: string;
        year: string;
    };
    address: {
        address1: string;
        isoCountryCode: string;
        isoRegionCode: string;
        city: string;
        address2?: string | undefined;
        postalCode?: string | undefined;
    };
    phoneNumber: string;
    selfieDocument: string;
    middleName?: string | undefined;
}, {
    firstName: string;
    lastName: string;
    dateOfBirth: {
        day: string;
        month: string;
        year: string;
    };
    address: {
        address1: string;
        isoCountryCode: string;
        isoRegionCode: string;
        city: string;
        address2?: string | undefined;
        postalCode?: string | undefined;
    };
    phoneNumber: string;
    selfieDocument: string;
    middleName?: string | undefined;
}>, z.ZodObject<{
    email: z.ZodString;
    identificationDocumentFront: z.ZodString;
}, "strip", z.ZodTypeAny, {
    email: string;
    identificationDocumentFront: string;
}, {
    email: string;
    identificationDocumentFront: string;
}>>, z.ZodUnion<[z.ZodObject<{
    identificationDocumentType: z.ZodEnum<[IdentificationDocumentType, ...IdentificationDocumentType[]]>;
    identificationDocumentBack: z.ZodString;
}, "strip", z.ZodTypeAny, {
    identificationDocumentType: IdentificationDocumentType;
    identificationDocumentBack: string;
}, {
    identificationDocumentType: IdentificationDocumentType;
    identificationDocumentBack: string;
}>, z.ZodObject<{
    identificationDocumentType: z.ZodEnum<[IdentificationDocumentType, ...IdentificationDocumentType[]]>;
}, "strip", z.ZodTypeAny, {
    identificationDocumentType: IdentificationDocumentType;
}, {
    identificationDocumentType: IdentificationDocumentType;
}>]>>;
export type PersonalDataAndDocumentsDetailedKyc = z.infer<typeof personalDataAndDocumentsDetailedKycSchema>;
export declare const kycSchemasSchema: z.ZodObject<{
    PersonalDataAndDocuments: z.ZodObject<{
        firstName: z.ZodString;
        middleName: z.ZodOptional<z.ZodString>;
        lastName: z.ZodString;
        dateOfBirth: z.ZodObject<{
            day: z.ZodString;
            month: z.ZodString;
            year: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            day: string;
            month: string;
            year: string;
        }, {
            day: string;
            month: string;
            year: string;
        }>;
        address: z.ZodObject<{
            address1: z.ZodString;
            address2: z.ZodOptional<z.ZodString>;
            isoCountryCode: z.ZodString;
            isoRegionCode: z.ZodString;
            city: z.ZodString;
            postalCode: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            address1: string;
            isoCountryCode: string;
            isoRegionCode: string;
            city: string;
            address2?: string | undefined;
            postalCode?: string | undefined;
        }, {
            address1: string;
            isoCountryCode: string;
            isoRegionCode: string;
            city: string;
            address2?: string | undefined;
            postalCode?: string | undefined;
        }>;
        phoneNumber: z.ZodString;
        selfieDocument: z.ZodString;
        identificationDocument: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        firstName: string;
        lastName: string;
        dateOfBirth: {
            day: string;
            month: string;
            year: string;
        };
        address: {
            address1: string;
            isoCountryCode: string;
            isoRegionCode: string;
            city: string;
            address2?: string | undefined;
            postalCode?: string | undefined;
        };
        phoneNumber: string;
        selfieDocument: string;
        identificationDocument: string;
        middleName?: string | undefined;
    }, {
        firstName: string;
        lastName: string;
        dateOfBirth: {
            day: string;
            month: string;
            year: string;
        };
        address: {
            address1: string;
            isoCountryCode: string;
            isoRegionCode: string;
            city: string;
            address2?: string | undefined;
            postalCode?: string | undefined;
        };
        phoneNumber: string;
        selfieDocument: string;
        identificationDocument: string;
        middleName?: string | undefined;
    }>;
    PersonalDataAndDocumentsDetailed: z.ZodIntersection<z.ZodIntersection<z.ZodObject<Omit<{
        firstName: z.ZodString;
        middleName: z.ZodOptional<z.ZodString>;
        lastName: z.ZodString;
        dateOfBirth: z.ZodObject<{
            day: z.ZodString;
            month: z.ZodString;
            year: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            day: string;
            month: string;
            year: string;
        }, {
            day: string;
            month: string;
            year: string;
        }>;
        address: z.ZodObject<{
            address1: z.ZodString;
            address2: z.ZodOptional<z.ZodString>;
            isoCountryCode: z.ZodString;
            isoRegionCode: z.ZodString;
            city: z.ZodString;
            postalCode: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            address1: string;
            isoCountryCode: string;
            isoRegionCode: string;
            city: string;
            address2?: string | undefined;
            postalCode?: string | undefined;
        }, {
            address1: string;
            isoCountryCode: string;
            isoRegionCode: string;
            city: string;
            address2?: string | undefined;
            postalCode?: string | undefined;
        }>;
        phoneNumber: z.ZodString;
        selfieDocument: z.ZodString;
        identificationDocument: z.ZodString;
    }, "identificationDocument">, "strip", z.ZodTypeAny, {
        firstName: string;
        lastName: string;
        dateOfBirth: {
            day: string;
            month: string;
            year: string;
        };
        address: {
            address1: string;
            isoCountryCode: string;
            isoRegionCode: string;
            city: string;
            address2?: string | undefined;
            postalCode?: string | undefined;
        };
        phoneNumber: string;
        selfieDocument: string;
        middleName?: string | undefined;
    }, {
        firstName: string;
        lastName: string;
        dateOfBirth: {
            day: string;
            month: string;
            year: string;
        };
        address: {
            address1: string;
            isoCountryCode: string;
            isoRegionCode: string;
            city: string;
            address2?: string | undefined;
            postalCode?: string | undefined;
        };
        phoneNumber: string;
        selfieDocument: string;
        middleName?: string | undefined;
    }>, z.ZodObject<{
        email: z.ZodString;
        identificationDocumentFront: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        email: string;
        identificationDocumentFront: string;
    }, {
        email: string;
        identificationDocumentFront: string;
    }>>, z.ZodUnion<[z.ZodObject<{
        identificationDocumentType: z.ZodEnum<[IdentificationDocumentType, ...IdentificationDocumentType[]]>;
        identificationDocumentBack: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        identificationDocumentType: IdentificationDocumentType;
        identificationDocumentBack: string;
    }, {
        identificationDocumentType: IdentificationDocumentType;
        identificationDocumentBack: string;
    }>, z.ZodObject<{
        identificationDocumentType: z.ZodEnum<[IdentificationDocumentType, ...IdentificationDocumentType[]]>;
    }, "strip", z.ZodTypeAny, {
        identificationDocumentType: IdentificationDocumentType;
    }, {
        identificationDocumentType: IdentificationDocumentType;
    }>]>>;
}, "strip", z.ZodTypeAny, {
    PersonalDataAndDocuments: {
        firstName: string;
        lastName: string;
        dateOfBirth: {
            day: string;
            month: string;
            year: string;
        };
        address: {
            address1: string;
            isoCountryCode: string;
            isoRegionCode: string;
            city: string;
            address2?: string | undefined;
            postalCode?: string | undefined;
        };
        phoneNumber: string;
        selfieDocument: string;
        identificationDocument: string;
        middleName?: string | undefined;
    };
    PersonalDataAndDocumentsDetailed: ({
        firstName: string;
        lastName: string;
        dateOfBirth: {
            day: string;
            month: string;
            year: string;
        };
        address: {
            address1: string;
            isoCountryCode: string;
            isoRegionCode: string;
            city: string;
            address2?: string | undefined;
            postalCode?: string | undefined;
        };
        phoneNumber: string;
        selfieDocument: string;
        middleName?: string | undefined;
    } & {
        email: string;
        identificationDocumentFront: string;
    } & ({
        identificationDocumentType: IdentificationDocumentType;
        identificationDocumentBack: string;
    } | {
        identificationDocumentType: IdentificationDocumentType;
    })) & (({
        firstName: string;
        lastName: string;
        dateOfBirth: {
            day: string;
            month: string;
            year: string;
        };
        address: {
            address1: string;
            isoCountryCode: string;
            isoRegionCode: string;
            city: string;
            address2?: string | undefined;
            postalCode?: string | undefined;
        };
        phoneNumber: string;
        selfieDocument: string;
        middleName?: string | undefined;
    } & {
        email: string;
        identificationDocumentFront: string;
    } & ({
        identificationDocumentType: IdentificationDocumentType;
        identificationDocumentBack: string;
    } | {
        identificationDocumentType: IdentificationDocumentType;
    })) | undefined);
}, {
    PersonalDataAndDocuments: {
        firstName: string;
        lastName: string;
        dateOfBirth: {
            day: string;
            month: string;
            year: string;
        };
        address: {
            address1: string;
            isoCountryCode: string;
            isoRegionCode: string;
            city: string;
            address2?: string | undefined;
            postalCode?: string | undefined;
        };
        phoneNumber: string;
        selfieDocument: string;
        identificationDocument: string;
        middleName?: string | undefined;
    };
    PersonalDataAndDocumentsDetailed: ({
        firstName: string;
        lastName: string;
        dateOfBirth: {
            day: string;
            month: string;
            year: string;
        };
        address: {
            address1: string;
            isoCountryCode: string;
            isoRegionCode: string;
            city: string;
            address2?: string | undefined;
            postalCode?: string | undefined;
        };
        phoneNumber: string;
        selfieDocument: string;
        middleName?: string | undefined;
    } & {
        email: string;
        identificationDocumentFront: string;
    } & ({
        identificationDocumentType: IdentificationDocumentType;
        identificationDocumentBack: string;
    } | {
        identificationDocumentType: IdentificationDocumentType;
    })) & (({
        firstName: string;
        lastName: string;
        dateOfBirth: {
            day: string;
            month: string;
            year: string;
        };
        address: {
            address1: string;
            isoCountryCode: string;
            isoRegionCode: string;
            city: string;
            address2?: string | undefined;
            postalCode?: string | undefined;
        };
        phoneNumber: string;
        selfieDocument: string;
        middleName?: string | undefined;
    } & {
        email: string;
        identificationDocumentFront: string;
    } & ({
        identificationDocumentType: IdentificationDocumentType;
        identificationDocumentBack: string;
    } | {
        identificationDocumentType: IdentificationDocumentType;
    })) | undefined);
}>;
export type KycSchemas = z.infer<typeof kycSchemasSchema>;
export declare const kycRequestParamsSchema: z.ZodObject<{
    kycSchema: z.ZodNativeEnum<typeof KycSchema>;
}, "strip", z.ZodTypeAny, {
    kycSchema: KycSchema;
}, {
    kycSchema: KycSchema;
}>;
export type KycRequestParams = z.infer<typeof kycRequestParamsSchema>;
export declare const kycStatusResponseSchema: z.ZodObject<{
    kycStatus: z.ZodNativeEnum<typeof KycStatus>;
}, "strip", z.ZodTypeAny, {
    kycStatus: KycStatus;
}, {
    kycStatus: KycStatus;
}>;
export type KycStatusResponse = z.infer<typeof kycStatusResponseSchema>;
