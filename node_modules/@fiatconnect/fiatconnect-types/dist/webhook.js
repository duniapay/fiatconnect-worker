"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.webhookRequestBodySchema = exports.webhookRequestBodyKycSchema = exports.webhookRequestBodyTransferOutSchema = exports.webhookRequestBodyTransferInSchema = exports.webhookEventTypeSchema = exports.WebhookEventType = void 0;
const zod_1 = require("zod");
const kyc_1 = require("./kyc");
const transfer_1 = require("./transfer");
var WebhookEventType;
(function (WebhookEventType) {
    WebhookEventType["KycStatusEvent"] = "WebhookKycStatusEvent";
    WebhookEventType["TransferInStatusEvent"] = "WebhookTransferInStatusEvent";
    WebhookEventType["TransferOutStatusEvent"] = "WebhookTransferOutStatusEvent";
})(WebhookEventType || (exports.WebhookEventType = WebhookEventType = {}));
exports.webhookEventTypeSchema = zod_1.z.nativeEnum(WebhookEventType, {
    description: 'webhookEventTypeSchema',
});
const webhookEventBodyBaseSchema = zod_1.z.object({
    provider: zod_1.z.string(),
    eventId: zod_1.z.string(),
    timestamp: zod_1.z.string(),
    address: zod_1.z.string(),
});
exports.webhookRequestBodyTransferInSchema = zod_1.z.intersection(webhookEventBodyBaseSchema, zod_1.z.object({
    eventType: zod_1.z.literal(WebhookEventType.TransferInStatusEvent),
    payload: transfer_1.transferInStatusResponseSchema,
}), {
    description: 'webhookRequestBodyTransferInSchema',
});
exports.webhookRequestBodyTransferOutSchema = zod_1.z.intersection(webhookEventBodyBaseSchema, zod_1.z.object({
    eventType: zod_1.z.literal(WebhookEventType.TransferOutStatusEvent),
    payload: transfer_1.transferOutStatusResponseSchema,
}), {
    description: 'webhookRequestBodyTransferOutSchema',
});
exports.webhookRequestBodyKycSchema = zod_1.z.intersection(webhookEventBodyBaseSchema, zod_1.z.object({
    eventType: zod_1.z.literal(WebhookEventType.KycStatusEvent),
    payload: zod_1.z.object({
        kycSchema: kyc_1.kycSchemaSchema,
        kycStatus: kyc_1.kycStatusSchema,
    }),
}), {
    description: 'webhookRequestBodyKycSchema',
});
exports.webhookRequestBodySchema = zod_1.z.union([
    exports.webhookRequestBodyTransferInSchema,
    exports.webhookRequestBodyTransferOutSchema,
    exports.webhookRequestBodyKycSchema,
], { description: 'webhookRequestBodySchema' });
//# sourceMappingURL=webhook.js.map